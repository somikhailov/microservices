stages:
  - build
  - deploy
  - post_deploy

.registry_common:
  stage: build
  image: docker:20.10.17
  before_script:
    - echo $CI_REGISTRY_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin
  after_script:
    - docker logout

.kube_common:
  stage: deploy
  image: dtzar/helm-kubectl
  variables:
    KUBE_CONFIG: $KUBE_CONFIG
  before_script:
    - mkdir -p ~/.kube
    - echo $KUBE_CONFIG | base64 -d > ~/.kube/config
  after_script:
    - rm -rf ~/.kube/config

include:
  - local: ".gitlab/postgres-micro.yml"
  - local: ".gitlab/flask-micro.yml"
  - local: ".gitlab/vue-micro.yml"

load_dashboards:
  stage: post_deploy
  image: dwdraju/alpine-curl-jq
  when: manual
  script:
    - |
      curl -X POST -H "Authorization: Bearer ${GRAFANA_TOKEN}" -H "Accept: application/json" -H "Content-Type: application/json" -d "$(jq . dashboards/folder.json)" http://${GRAFANA_DNS_NAME}/api/folders
      folder_uid=$(curl -s -X GET -H "Authorization: Bearer ${GRAFANA_TOKEN}" -H "Accept: application/json" -H "Content-Type: application/json" http://${GRAFANA_DNS_NAME}/api/folders | jq '.[] .uid')
      pg="{\"dashboard\": $(jq . dashboards/postgres-database.json), \"overwrite\": false, \"folderUid\": $folder_uid}"
      flask="{\"dashboard\": $(jq . dashboards/flask.json), \"overwrite\": false, \"folderUid\": $folder_uid}"
      nodejs="{\"dashboard\": $(jq . dashboards/nodejs.json), \"overwrite\": false, \"folderUid\": $folder_uid}"
      curl -X POST -H "Authorization: Bearer ${GRAFANA_TOKEN}" -H "Accept: application/json" -H "Content-Type: application/json" -d "${pg}" http://${GRAFANA_DNS_NAME}/api/dashboards/db
      curl -X POST -H "Authorization: Bearer ${GRAFANA_TOKEN}" -H "Accept: application/json" -H "Content-Type: application/json" -d "${flask}" http://${GRAFANA_DNS_NAME}/api/dashboards/db
      curl -X POST -H "Authorization: Bearer ${GRAFANA_TOKEN}" -H "Accept: application/json" -H "Content-Type: application/json" -d "${nodejs}" http://${GRAFANA_DNS_NAME}/api/dashboards/db
