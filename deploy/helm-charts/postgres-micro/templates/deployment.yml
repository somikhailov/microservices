apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    name: database
  name: postgres-micro
spec:
  progressDeadlineSeconds: 2147483647
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service: postgres-micro
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: postgres-micro
    spec:
      containers:
      - name: postgres-micro
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: password
      - name: postgres-exporter
        image: bitnami/postgres-exporter:0.10.1
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-credentials
                key: password
          - name: DATA_SOURCE_NAME
            value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@127.0.0.1:5432/postgres?sslmode=disable"
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume-mount
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgres-volume-mount
        persistentVolumeClaim:
          claimName: postgres-pvc
