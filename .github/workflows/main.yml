name: microservices

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: linuxserver/docker-compose
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build the Docker image
      run: |
        docker-compose -f docker-compose.k8s-build.yml build
        docker-compose -f docker-compose.k8s-build.yml push
  test:
    needs: [build]
    runs-on: ubuntu-latest
    container: linuxserver/docker-compose
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: test microservices
      run: |
        docker-compose up -d --build
        docker-compose exec -T server python manage.py recreate_db
        docker-compose exec -T server python manage.py seed_db
        docker run --network container:server appropriate/curl -s --retry 10 --retry-connrefused http://localhost:5000/books/ping
        docker run --network container:server appropriate/curl -s --retry 10 --retry-connrefused http://localhost:5000/books
        docker run --network container:client appropriate/curl -s --retry 10 --retry-connrefused http://localhost:8080
        docker-compose down -v
  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    container: chatwork/helmfile
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Helm check
      run: |
        mkdir -p $HOME/.kube
        echo ${{ secrets.KUBE_CONFIG_BASE64_DATA }} | base64 -d > $HOME/.kube/config
        helmfile sync
